.model prova
.inputs PRIMO1 PRIMO0 SECONDO1 SECONDO0 INIZIO outm1 outm0
.outputs NO_VALID MOSSA_PREC1 MOSSA_PREC0 VINCITORE_PRECEDENTE1 VINCITORE_PRECEDENTE0

# calcolo registro mossa precedente ( MOSSA_PREC1 E MOSSA_PREC0 )
.subckt muxMossaprecedente PRIMO1=PRIMO1 PRIMO0=PRIMO0 SECONDO1=SECONDO1 SECONDO0=SECONDO0 outm1=outm1 outm0=outm0 INIZIO=INIZIO o1=muxP1 o0=muxP0
.subckt mossaprecedente i1=muxP1 i0=muxP0 o1=MOSSA_PREC1 o0=MOSSA_PREC0

# calcolo registro vincitore precedente ( VINCITORE_PRECEDENTE1 e VINCITORE_PRECEDENTE0 )
.subckt vincitoreprecedente i1=vp1 i0=vp2 o1=VINCITORE_PRECEDENTE1 o0=VINCITORE_PRECEDENTE0
.subckt muxVinci VINCITORE_PRECEDENTE1=VINCITORE_PRECEDENTE1 VINCITORE_PRECEDENTE0=VINCITORE_PRECEDENTE0 outm1=outm1 outm0=outm0 INIZIO=INIZIO o1=vp1 o0=vp2


# calcola se primo o secondo inseriscono 00
.subckt mossazero PRIMO1=PRIMO1 PRIMO0=PRIMO0 SECONDO1=SECONDO1 SECONDO0=SECONDO0 out=mz
# multiplexer per NO_VALID
.subckt muxMossaripetuta PRIMO1=PRIMO1 PRIMO0=PRIMO0 SECONDO1=SECONDO1 SECONDO0=SECONDO0 VINCITORE_PRECEDENTE1=VINCITORE_PRECEDENTE1 VINCITORE_PRECEDENTE0=VINCITORE_PRECEDENTE0 o1=muxM1 o0=muxM0
# calcolo output NO_VALID
.subckt mossaripetuta MOSSA_PREC1=MOSSA_PREC1 MOSSA_PREC0=MOSSA_PREC0 e1=muxM1 e0=muxM0 c3=mz INIZIO=INIZIO out=NO_VALID

.search vincitoreprecedente.blif
.search mossaprecedente.blif
.search mossaripetuta.blif
.search muxMossaripetuta.blif
.search mossazero.blif
.search muxMossaprecedente.blif
.search muxVinci.blif

.end
